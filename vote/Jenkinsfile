pipeline{

  agent none

  stages {
    
    stage('build'){
      when {
        changeset '**/vote/*'
      }
      agent {
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      steps{
        echo 'Compiling vote app'
        dir(path: 'vote'){
          sh 'pip install -r requirements.txt'
        }
      }
    }
    stage('test'){
      when {
        changeset '**/vote/*'    
      }
      agent {
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      steps{
        echo 'Running unit test on vote app'
        dir(path: 'vote'){
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
        }
      }
    }
    stage('integration'){
      agent any 
      when{ 
        changeset "**/vote/**" 
        branch 'master' 
      } 
      steps{ 
        echo 'Running Integration Tests on vote app' 
        dir('vote'){ 
          sh 'sh integration_test.sh' 
      } 
    } 
    stage('docker-package') {
      agent any
      steps {
        echo 'Packaging vote app with docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'docker-login') {
            // ./vote is the path to the Dockerfile that Jenkins will find from the Github repo
            def voteImage = docker.build("swidiws/vote:${env.GIT_COMMIT}", "./vote")
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
            voteImage.push("latest")
          }
        }
      }
    }
  post{
    always{
      echo 'Building pipeline for vote app completed'
    }
  }
}
